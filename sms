#!/usr/bin/php
<?php
define('ROOT','/var/www');
$baseDir = dirname(__FILE__);
$config = array('host'=>'89.111.21.7','port'=>'2345','login'=>'eokz','password'=>'62d96e');
$config = json_decode(file_get_contents(ROOT."/smsconfig.json"), 1);
if (empty($config) || !isset($config['mysql']))
    throw new Exception('Error reading config file. Check existance and json validity, check mysql config part');
$LOG_FILE = ROOT . '/application/log/sms.log';
if(is_file($LOG_FILE))
    @unlink($LOG_FILE);
if(is_file('/var/lock/sms.pid'))
    @unlink('/var/lock/sms.pid');
@file_put_contents('/var/lock/sms.pid', getmypid());
function log_msg($msg){
    global $LOG_FILE;
    $message = date('d.m.Y H:i:s')."> $msg\n";
    @file_put_contents($LOG_FILE, $message,FILE_APPEND);
}
log_msg("Service started!");
require_once ROOT . '/application/extensions/php-smpp/smppclient.class.php';
require_once ROOT . '/application/extensions/php-smpp/gsmencoder.class.php';
require_once ROOT . '/application/extensions/php-smpp/sockettransport.class.php';
include_once ROOT . "/application/x3framework/X3.php";
include_once ROOT . "/application/x3framework/X3/X3_String.php";
include_once ROOT . "/application/x3framework/X3/X3_Component.php";
include_once ROOT . "/application/x3framework/X3/X3_MySQLConnection.php";

$table = isset($config['mysql']['table'])?$config['mysql']['table']:"sms_stack";
$attributes = isset($config['mysql']['attributes'])?$config['mysql']['attributes']:array('phone'=>'phone','message'=>'message','sender'=>'sender');
////New database connection
$db = new X3_MySQLConnection($config['mysql']);
date_default_timezone_set("Asia/Almaty");
////Establish socket smpp connection
//$smpp = new SMPP($config);
$transport = new SocketTransport(array($config['host']),array($config['port']));
$transport->setSendTimeout(100);
$transport->setRecvTimeout(10000);
SmppClient::$system_type = "SMPP";
$smpp = new SmppClient($transport);
//Allow debug dump output
$smpp->debug = true;
$transport->debug = true;


$from = new SmppAddress('eksk', SMPP::TON_ALPHANUMERIC);
while (1) {
    $q = $db->query("
        SELECT id,
        `{$attributes['phone']}` AS `phone`,`{$attributes['message']}` AS `message`,`{$attributes['sender']}` AS `sender`, COUNT(0) AS `cnt`
        FROM `$table`
        WHERE `status`<>0
        GROUP BY `phone`
        ");
    if(!is_resource($q)){
        $smpp->close();
        log_msg($db->getErrors());
        throw new Exception($db->getErrors());
    }
    $i = 1;
    $db->startTransaction();
    $num = mysql_num_rows($q);
    if($num > 0)
        log_msg("$num recipients...");
    while($model = mysql_fetch_assoc($q)){
        if (!$transport->isOpen()) {
            log_msg("Opening transport protocol");
            $transport->open();
            $smpp->bindTransmitter($config['login'],$config['password']);
        }
        $res = -1;
        try{
            $message = $model['message'];
            $phone = implode(' ',array(substr($model['phone'], 1,3),substr($model['phone'], 4,3),substr($model['phone'], 7,2),substr($model['phone'], 9,2)));
            $user = $db->fetch("SELECT u.id, smsTime, smsCount FROM user_settings s INNER JOIN data_user u ON u.id=s.user_id WHERE u.phone LIKE '$phone'");
            $mongo = null;
            log_msg("Trying sms to $phone");
            try {
                $mongo = new Mongo("localhost");
                $mongodb = $mongo->selectDB('eksk');
            }catch(Exception $e){
                log_msg("Mongo init error: ".$e->getMessage());
            }
            $dayb = mktime(0,0,0,(int)date('m'),(int)date('j'),(int)date('Y'));
            $daye = mktime(23,59,59,(int)date('m'),(int)date('j'),(int)date('Y'));
            $sent = $db->fetch("SELECT COUNT(0) `cnt` FROM `$table` WHERE phone='{$model['phone']}' AND status=0 AND sent_at BETWEEN $dayb AND $daye");//sent sms
            if($user && ($mongo==null || $mongodb->online->count(array('user_id'=>$user['id']))==0) && $sent['cnt']<$user['smsCount']){
                $time = explode('-',$user['smsTime']);
                $f = explode(':',$time[0]);$f = (int)$f[0] * 60 + (int)$f[1];
                $t = explode(':',$time[1]);$t = (int)$t[0] * 60 + (int)$t[1];
                $curtime = (int)date("H") * 60 + (int)date("i");
                $now = date("H:i");
                echo "===========================\r\ntime:$time[0]-$time[1],now:$now\r\n$f < $curtime < $t\r\n===================================\r\n\r\n";
                if(($f < $t && $curtime > $f && $curtime <= $t) || ($f >= $t && ( ($f<=$curtime && $curtime<1440) || (0<=$curtime && $curtime<=$t) ))) {
                    $res = 0;
                    if($model['cnt']>1){
                        log_msg("\t...{$model['cnt']} events.");
                        $message = $db->fetch("SELECT `text` FROM `data_sms` WHERE `name`='fewEvents'");
                        $message = $message['text'];
                        if(preg_match("/\[(.+)?\]/", $message, $m)>0){
                            $x = explode("|", $m[1]);
                            array_shift($x);
                            $x = $model['cnt']." ".X3_String::create("")->numeral($model['cnt'], $x);
                            $message = str_replace($m[0], $x, $message);
                        }
                    }
                    $encodedMessage = iconv('UTF-8', "UTF-16BE", $message);
                    $to = new SmppAddress($model['phone'], SMPP::TON_INTERNATIONAL,SMPP::NPI_E164);
                    $id = $smpp->sendSMS($from, $to, $encodedMessage,null,SMPP::DATA_CODING_UCS2);
                    log_msg("Message $id sent to $to");
                }
            }else{
                if(!$user)
                    log_msg ("No user with phone '{$model['phone']}' exists!");
                elseif($sent['cnt']==$user['smsCount'])
                    log_msg ("#{$user['id']} hit limit of {$sent['cnt']}/{$user['smsCount']}");
                else
                    log_msg ("#{$user['id']} is online");
                $db->query("DELETE FROM `$table` WHERE phone='{$model['phone']}' AND status<>0");
            }
        }catch(SmppException $e){
            $res = (int)$e->getCode();
            $message = $e->getMessage(). "\r\n\t" .$e->getFile(). " (".$e->getLine().")";
            log_msg($message);
            echo "\r\n\t------EXCEPTION $res------\r\n\t$message\r\n\t--------------------\r\n\r\n";
        }
        $time = time();
        $db->addTransaction("UPDATE `$table` SET `status`='$res', `sent_at`='$time' WHERE `phone`='{$model['phone']}' AND status<>0");
        if($i++%200==0){
            $db->commit();
            sleep(1);
        }
    }
    if($transport->isOpen()){
        $smpp->close();
    }
    $db->commit();
    sleep(10);
}
?>
